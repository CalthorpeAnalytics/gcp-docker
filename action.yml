name: Build and Push Docker Image to GCP
description: Builds a docker image and pushes to artifact registry
inputs:
  gcp-sa-creds-json:
    description: GCP service account credentials in JSON; mutually exclusive with gcp-identity-provider
    required: false
  gcp-identity-provider:
    description: The identity pool provider to use for identity federation; mutually exclusive with gcp-sa-creds-json
    required: false
  gcp-service-account:
    description: |-
      The email of the service account to assume via identity federation; must be set if gcp-identity-provider is set
    required: false
  name:
    description: image name (e.g. my-app)
    required: true
  project:
    description: GCP project
    required: true
  registry:
    description: GCP artifact registry (e.g. us-central1-docker.pkg.dev)
    required: true
  repo:
    description: path to repo within the registry/org (e.g. my-dockers)
    required: true
  tag_branch:
    description: if set to a value other than "none", tag the image with the truncated branch name
    required: true
    default: "none"
  tag_latest:
    description: if set to "branch" tag with "${branch}-latest"; if set to "true" or "latest" tag with "latest"
    required: true
    default: "none"
  tag_sha:
    description: if set, use the provided SHA sum for tagging (defaults to GITHUB_SHA, set to "none" to disable)
    required: true
    default: ${{ github.sha }}
runs:
  using: composite
  steps:
    - name: validate inputs
      uses: actions/github-script@v6
      env:
        gcp_sa_creds_json: ${{ inputs.gcp-sa-creds-json }}
        gcp_identity_provider: ${{ inputs.gcp-identity-provider }}
        gcp_service_account: ${{ inputs.gcp-service-account }}
      with:
        script: |
          const { gcp_sa_creds_json, gcp_identity_provider, gcp_service_account } = process.env

          if (!!gcp_sa_creds_json && !!gcp_identity_provider) {
            core.setFailed('Exactly one of gcp-sa-creds-json or gcp-identity-provider must be specified.')
          }

          if (!gcp_sa_creds_json && !gcp_identity_provider) {
            core.setFailed('Exactly one of gcp-sa-creds-json or gcp-identity-provider must be specified.')
          }

          if (!!gcp_identity_provider && !gcp_service_account) {
            core.setFailed('Input gcp-service-account is required if gcp-identity-provider is specified.')
          }

    - name: truncate SHA
      if: ${{ inputs.tag_sha != 'none' }}
      uses: 2428392/gh-truncate-string-action@v1.1.0
      id: sha
      with:
        stringToTruncate: ${{ inputs.tag_sha }}
        maxLength: 7

    - name: truncate PR branch
      if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
      uses: 2428392/gh-truncate-string-action@v1.1.0
      id: branch_pr
      with:
        stringToTruncate: ${{ github.head_ref }}
        maxLength: 42

    - name: truncate push branch
      if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
      uses: 2428392/gh-truncate-string-action@v1.1.0
      id: branch_push
      with:
        stringToTruncate: ${{ github.ref_name }}
        maxLength: 42

    - name: checkout
      uses: actions/checkout@v3

    - name: build docker image
      shell: bash
      run: docker build -t ${{ inputs.name }}:${{ steps.sha.outputs.string }} .

    - name: authenticate to gcp
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.gcp-sa-creds-json }}
        workload_identity_provider: ${{ inputs.gcp-identity-provider }}
        service_account: ${{ inputs.gcp-service-account }}

    - name: set up gcloud sdk
      uses: google-github-actions/setup-gcloud@v0

    - name: configure docker
      shell: bash
      run: gcloud --quiet auth configure-docker ${{ inputs.registry }}

    - name: tag sha and push
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.sha.outputs.string }}
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.sha.outputs.string }}

    - name: tag with tag and push
      if: ${{ github.ref_type == 'tag' }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ github.ref_name }}
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ github.ref_name }}

    - name: tag branch and push PR
      if: ${{ inputs.tag_branch != 'none' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_pr.outputs.string }} 
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_pr.outputs.string }} 

    - name: tag branch-latest and push PR
      if: ${{ inputs.tag_latest == 'branch' && (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_pr.outputs.string }}-latest
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_pr.outputs.string }}-latest 

    - name: tag branch and push
      if: ${{ inputs.tag_branch != 'none' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_push.outputs.string }} 
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_push.outputs.string }} 

    - name: tag branch-latest and push
      if: ${{ inputs.tag_latest == 'branch' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_push.outputs.string }}-latest
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:${{ steps.branch_push.outputs.string }}-latest 

    - name: tag latest and push
      if: ${{ inputs.tag_latest == 'latest' || inputs.tag_latest == 'true' }}
      shell: bash
      run: |
        docker tag ${{ inputs.name }}:${{ steps.sha.outputs.string }} ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:latest
        docker push ${{ inputs.registry }}/${{ inputs.project }}/${{ inputs.repo }}/${{ inputs.name }}:latest 
